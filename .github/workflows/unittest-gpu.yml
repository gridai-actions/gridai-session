name: 'Grid.ai Session CPU'
on:
  push:
    paths:
      - action.yml
      - .github/workflows/unittest-cpu.yml
jobs:
  unittests:
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest,windows-latest]
        python-version: [3.8 ,3.9]       
        python-venv: ["", "venv"]       
        instance-type: [t2.medium]       
        use-spot: ["", "--use_spot"]       
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    steps:
      - uses: gridai-actions/gridai-login@main
        with:
          python-version: ${{ matrix.python-version }}
          python-venv: ${{ matrix.python-venv }}
          gridai-username: ${{ secrets.GRIDAI_USERNAME }} 
          gridai-key: ${{ secrets.GRIDAI_KEY }} 
      - id: gridai-obj-create
        uses: gridai-actions/gridai-session@main
        with:
          grid-args: "${{ matrix.use-spot }} --instance_type ${{ matrix.instance-type }}"
      - run: | 
          grid session ssh ${{ steps.gridai-obj-create.outputs.obj-id }} "ls; exit" | tee grid.session.log
      - run: |
          grid session pause ${{ steps.gridai-obj-create.outputs.obj-id }} 
      - id: gridai-obj-status-pause
        uses: gridai-actions/gridai-status@main
        with:
          obj-type: session
          obj-id: ${{ steps.gridai-obj-create.outputs.obj-id }}
          script-args: '-t "^paused$"'
      - run: |
          grid session resume ${{ steps.gridai-obj-create.outputs.obj-id }}
      - id: gridai-obj-status-resume
        uses: gridai-actions/gridai-status@main
        with:
          obj-type: session
          obj-id: ${{ steps.gridai-obj-create.outputs.obj-id }}
          obj-status: "^running$"  
      - run: |
          grid session ssh ${{ steps.gridai-obj-create.outputs.obj-id }} "ls; exit" | tee grid.session.log                          
      - run: |
          grid session delete ${{ steps.gridai-obj-create.outputs.obj-id }}
   